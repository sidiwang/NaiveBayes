% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NaiveBayes.R
\name{NaiveBayes}
\alias{NaiveBayes}
\alias{NaiveBayes.default}
\alias{NaiveBayes.formula}
\alias{print.NaiveBayes}
\alias{predict.NaiveBayes}
\title{NaiveBayes}
\usage{
NaiveBayes(x, ...)

\method{NaiveBayes}{default}(x, y, laplace = 0, ...)

\method{NaiveBayes}{formula}(formula, data, laplace = 0, ...)

\method{print}{NaiveBayes}(x, ...)

\method{predict}{NaiveBayes}(
  object,
  newdata,
  type = c("class", "raw"),
  threshold = 0.001,
  eps = 0,
  ...
)
}
\arguments{
\item{x}{matrix or dataframe with categorical (character/factor/logical) or metric (numeric) predictors
, with correctly specified data types in each column.}

\item{y}{class vector (character/factor/logical)}

\item{laplace}{value used for Laplace smoothing (additive smoothing). Defaults to 0 (no
Laplace smoothing)}
}
\value{
An object of class "NaiveBayes".
}
\description{
This NaiveBayes package provides an efficient implementation of the very popular Naive
Bayes classifier, which assumes independence between the feature variables. The core
classification function was written in Rcpp. Gaussian distribution is used with numerical
variables. Please use 'NaiveBayes(...)' to fit model, and use 'predict()' to obtain its
corresponding predictions.
}
\details{
The general function \bold{\code{NaiveBayes()}} detects the class of each feature in the
dataset and assumes possibly different distribution for each feature.

1. Numeric (metric) predictors are handled by assuming that they follow Gaussian distribution,
given the class label; Missing values are not included into constructing tables. Logical variables
are treated as categorical (binary) variables.
}
\note{
The class "numeric" contains "double" (double precision floating point numbers) and "integer".
Prior the model fittng the classes of columns in the data.frame "data" can be easily checked via:
\itemize{
\item \code{sapply(data, class)}
\item \code{sapply(data, is.numeric)}
\item \code{sapply(data, is.double)}
\item \code{sapply(data, is.integer)}
}
}
\examples{
## Example with metric predictors:
data(iris)
m <- NaiveBayes(iris[,-5], iris[,5])
m
table(predict(m, iris), iris[,5])

}
\seealso{
fda
}
